<template>
	<view>
		<view>
			<map id="map1" ref="map1" :style="{height:mapheight}" style="width: 750rpx;" :longitude="startlongitude" :latitude="startlatitude"
			 :polyline="polyline" :show-location="showlocation" :markers="markers"></map></view>
		<view style="width: 698rpx;background-color: #FFFFFF;position: fixed;bottom: 40rpx;left: 26rpx;right: 26rpx;border-radius: 12rpx;">
			<view style="margin:20rpx;">
				<!-- <view style="height: 80rpx;flex-direction: row;border-bottom-width: 1px;border-color: #EAEAEA;">
					<button class="bt_now" @click="click_btnow"><text style="font-size: 30rpx;" :class="IsClick ? 'bt_text' : ''">现在</text></button>
					<button class="bt_booking" @click="click_btbooking"><text style="font-size: 30rpx;" :class="IsClick ? '' : 'bt_text'">预约</text></button>
				</view> -->
				<view style="flex-direction: row;justify-content: space-between;margin-top: 30rpx;margin-bottom: 30rpx;" v-if="!IsClick">
					<view style="flex-direction: row;justify-content: center;align-items: center;width: 329rpx;border-right-width: 1px;border-color: #EAEAEA;">
						<!-- <text style="font-size: 28rpx;">预约时间</text> -->
						<hTimePicker interval="5" dayNum="0" @changeTime="changeTime">
							<view slot="pCon" class="changeTime">
								<text style="font-size: 28rpx;">{{selecttime}}</text>
							</view>
						</hTimePicker>
						<uni-icons type="arrowright" size="19"></uni-icons>
					</view>
					<view style="flex-direction: row;justify-content: center;align-items: center;width: 329rpx;" @click="selectPassenger">
						<text style="font-size: 28rpx; word-break: break-word;" v-for="(item,index) in Passenger" :key="index">{{item.name}}&nbsp;</text>
						<uni-icons type="arrowright" size="19"></uni-icons>
					</view>
				</view>
				<view style="height: 97rpx;flex-direction: row;justify-content: center;" v-if="IsClick" @click="selectPassenger">
					<view style="flex-direction: row;justify-content: center;align-items: center;">
						<text style="font-size: 28rpx;" v-for="(item,index) in Passenger" :key="index">{{item.name}}&nbsp;</text>
						<uni-icons type="arrowright" size="19"></uni-icons>
					</view>
				</view>
				<view style="padding-top: 20rpx;flex-direction: row;justify-content: space-between;border-top-width: 1px;border-color:#EAEAEA;">
					<view style="align-items: center;justify-content: center;flex-direction: row;">
						<image src="../../static/Home/car1.png" style="width: 194rpx;height: 70rpx;"></image>
						<view>
							<text style="font-size: 28rpx;">出租车</text>
						</view>
					</view>
					<view style="align-items: center;justify-content: center;flex-direction: row;">
						<text style="font-size: 30rpx;font-weight: 300;">一口价&nbsp;&nbsp;</text>
						<text style="font-size: 36rpx;padding-right: 20rpx;font-weight: 300;">{{TaxiCost}}&nbsp;元</text>
					</view>
				</view>
				<view style="margin-top: 40rpx;align-items: center;">
					<button @click="promptlyCall" style="width: 640rpx;height: 84rpx;background-color:#FC4646;border-radius:12rpx;border-color:#FC4646;line-height: 84rpx;">
						<text style="color: #FFFFFF;font-size: 34rpx;">立即呼叫</text>
					</button>
				</view>
			</view>
		</view>
	</view>
</template>

<script>
	import taxi from "../../common/Czc.js";
	import uniIcons from "../../components/CZC/uni-icons/uni-icons.vue";
	import uniSegmentedControl from "../../components/CZC/uni-segmented-control/uni-segmented-control.vue";
	import hTimePicker from "../../components/CZC/h-timePicker/h-timePicker.vue";
	export default {
		components: {
			uniIcons,
			uniSegmentedControl,
			hTimePicker
		},
		data() {
			return {
				mapheight: '',
				selecttime: "点击选择时间",
				Passenger: [{
					name: "选择乘车人"
				}],
				TaxiCost: '',
				Distance: '',
				markers: [],
				startmarker: [],
				endmarker: [],
				startlatitude: 25.1,
				startlongitude: 118,
				endtlatitude: 25.33,
				endlongitude: 118,
				polyline: [],
				map: '',
				includePoints: [{
						latitude: 25.1,
						longitude: 118,
					},
					{
						latitude: 25.33,
						longitude: 118,
					}
				],
				startLonLat: '118,25.1',
				endLonLat: '118,25.33',
			}
		},
		onLoad() {
			//动态设置高度
			var that = this;
			that.setMarkers();
			uni.getSystemInfo({
				//设置地图高度为可使用的高度
				success: function(res) {
					that.mapheight = res.windowHeight + 'px';
				}
			});

		},
		onReady() {
			var that = this;
			this.map = uni.createMapContext('map1', this);
			// console.log(map.length);

			// console.log(map[0])
			// console.log(map);
		},
		onShow() {
			var that = this;
			uni.getStorage({ //获取乘车人
				key: "passengerList",
				success: function(res) {
					that.Passenger = res.data;
				}
			});
		},
		methods: {
			changeTime: function(e) { //选择预约时间
				this.selecttime = e;
			},
			selectPassenger: function() { //选择乘车人
				uni.navigateTo({
					url: '../GRZX/passengerInfo?submitType=1',
					animationType: 'pop-in',
					animationDuration: 200
				});
			},

			promptlyCall: function() { //立即呼叫、生成订单
				if (this.selecttime == "点击选择时间") {
					uni.showToast({
						title: "请选择时间"
					})
				} else {
					if (this.Passenger[0].name == '选择乘车人') {
						uni.showToast({
							title: "请选择乘车人"
						})
					} else {
						uni.navigateTo({
							url: '../CZC/WaitTakeOrder?orderNo=1',
							animationType: 'pop-in',
							animationDuration: 200,
							success: function() {
								try {
								    uni.removeStorageSync('passengerList');
								} catch (e) {
								    // error
								}
							}
						});
					}
				}
			},
			setMarkers: function() { //设置始末标点
				var that = this;
				var startmarker = { //起点
					id: 0,
					latitude: that.startlatitude,
					longitude: that.startlongitude,
					title: '在这上车',
					zIndex: '1',
					iconPath: '../../static/CZC/Start.png',
					rotate: 0,
					width: 20,
					height: 20,
					anchor: {
						x: 0.5,
						y: 1
					},
					callout: {
						content: '在这上车',
						color: '#000000',
						fontSize: 10,
						borderRadius: 4,
						borderWidth: 1,
						borderColor: '#333300',
						bgColor: '#FFFFFF',
						padding: '5',
						display: 'ALWAYS'
					}
				};
				var endmarker = {
					id: 1,
					latitude: that.endtlatitude,
					longitude: that.endlongitude,
					title: '在这下车',
					zIndex: '1',
					iconPath: '../../static/CZC/End.png',
					rotate: 0,
					width: 20,
					height: 20,
					anchor: {
						x: 0.5,
						y: 1
					},
					callout: {
						content: '在这下车',
						color: '#000000',
						fontSize: 10,
						borderRadius: 4,
						borderWidth: 1,
						borderColor: '#333300',
						bgColor: '#FFFFFF',
						padding: '5',
						display: 'ALWAYS'
					}
				};
				that.markers = [];
				that.startmarker = [];
				that.endmarker = [];
				that.markers.push(startmarker);
				that.markers.push(endmarker);
				that.showlocation = false;
				that.getDirectionDriving(that.startLonLat, that.endLonLat);
			},
			Timechange: function(time) { //时间转换
				var that = this;
				var date = parseInt(time / 3600 / 24);
				var hours = 0;
				var minutes = 0;
				var seconds = 0;
				if (date >= 1) {
					hours = parseInt((time - date * 24 * 3600) / 3600);
					if (hours >= 1) {
						minutes = Math.ceil((time - date * 24 * 3600 - hours * 3600) / 60);
						if (minutes >= 1) {
							// seconds = time -date*24*3600-  hours * 3600 - minutes * 60
							that.Duration = date + "天" + hours + "小时" + minutes + "分钟";
						} else {
							that.Duration = date + "天" + hours + "小时";
							// seconds = time -date*24*3600-  hours * 3600;
						}
					} else {
						minutes = Math.ceil(time / 60);
						if (minutes >= 1) {
							that.Duration = date + "天" + minutes + "分钟";
							// seconds = time -date*24*3600-minutes * 60
						} else {
							that.Duration = date + "天";
							// seconds = time-date*24*3600;
						}
					}
				} else {
					hours = parseInt(time / 3600)
					if (hours >= 1) {
						minutes = Math.ceil((time - hours * 3600) / 60);
						if (minutes >= 1) {
							// seconds = time - hours * 3600 - minutes * 60
							that.Duration = hours + "小时" + minutes + "分钟";
						} else {
							that.Duration = hours + "小时";
							// seconds = time - hours * 3600;
						}
					} else {
						minutes = Math.ceil(time / 60);
						if (minutes >= 1) {
							that.Duration = minutes + "分钟";
							// seconds = time - minutes * 60
						} else {
							// seconds = time;
						}
					}
				}
			},
			getDirectionDriving: function(startLonLat, endLonLat) {
				//调用高德api取得路径规划并绘制线路
				var that = this;
				uni.request({
					url: taxi.InterfaceAddress[0],
					data: {
						startLonLat: startLonLat,
						endLonLat: endLonLat,
					},
					method: "GET",
					success: function(res) {
						//日后会加入定时，此处需清空
						that.points = [];
						that.polyline = [];

						var polylineArr = [];
						var points = [];
						that.TaxiCost = res.data.TaxiCost;
						if ((res.data.Distance / 1000) > 1) {
							that.Distance = res.data.Distance / 1000 + "公里";
						} else {
							that.Distance = res.data.Distance + "米";
						}
						that.Timechange(res.data.Duration);
						polylineArr = res.data.Polyline;

						for (var i = 0; i < polylineArr.length; i++) {
							var arr = polylineArr[i].split(';');
							for (var j = 0; j < arr.length; j++) {
								points.push(arr[j]);
							}
						}
						//根据文件建设对象经纬度数组
						for (var i = 0; i < points.length; i++) {
							var arr = points[i].split(',');
							var obj = {
								longitude: arr[0],
								latitude: arr[1]
							}
							that.points.push(obj);
						}
						var obj = {
							points: that.points,
							width: 10,
							arrowLine: true,
							// arrowIconPath:'../../static/CZC/jiantou.png',
							color: "#4BDC27",
							borderColor: "#8c918b",
						};
						that.polyline.push(obj);
						uni.hideLoading();
						setTimeout(function() {
							that.map.includePoints({
								padding: [700],
								points: [{
										latitude: 25.1,
										longitude: 118,
									},
									{
										latitude: 25.33,
										longitude: 118,
									}
								]
							});
							// console.log(that.map);
						}, 500)
					},
					fail: function(res) {
						uni.hideLoading();
						uni.showToast({
							title: "查询失败"
						})
						that.markers = [];
						console.log(res);
					}
				});
			},

		}

	}
</script>

<style>

</style>
